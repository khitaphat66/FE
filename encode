import numpy as np
import pandas as pd
from sklearn.preprocessing import OrdinalEncoder, OneHotEncoder, MinMaxScaler, StandardScaler

import seaborn as sns

X = pd.DataFrame(np.array(['M', 'O-', 'medium',
                           'M', 'O-', 'high',
                           'F', 'O+', 'high',
                           'F', 'AB', 'low',
                           'F', 'B+', np.nan, ]).reshape((5, 3)))
X.columns = ['sex', 'blood_type', 'edu_level']
#print(X)
#print('-------------------------------------------------')

encoder = OrdinalEncoder()
X['new_edu_level'] = encoder.fit_transform(X.edu_level.values.reshape(-1,1))
#print(X)
#print('-------------------------------------------------')

cat = pd.Categorical(X.edu_level,
                     categories=['missing', 'low',
                                 'medium', 'high'],
                     ordered=True)
#print(cat)
#print('------------------------------------------------')

cat = cat.fillna('missing')
#print(cat)
#print('------------------------------------------------')

labels, unique = pd.factorize(cat, sort=True)
X.edu_level = labels
#print(X)
#print('------------------------------------------------')

onehot = OneHotEncoder(dtype=int, sparse_output=True)
nominals = pd.DataFrame(
    onehot.fit_transform(X[['sex', 'blood_type']]).toarray(),
    columns=['F', 'M', 'AB', 'B+', 'O+', 'O-'])
nominals['edu_level'] = X.edu_level
#print(nominals)
#print('------------------------------------------------')

#Scale with Pandas DataFrame
data = sns.load_dataset('iris')
print('Original Dataset')
print(data.head())
# Min-Max Normalization
df = data.drop('species', axis=1)
df_norm = (df - df.min()) / (df.max() - df.min())
df_norm = pd.concat([df_norm, data['species']], axis=1)
print("Scaled Dataset Using Pandas")
print(df_norm.head())
print('------------------------------------------------------')

#MinMaxScaler
data = sns.load_dataset('iris')
print('Original Dataset')
print(data.head())
scaler = MinMaxScaler()
df_scaled = scaler.fit_transform(df.to_numpy())
df_scaled = pd.DataFrame(df_scaled, columns=[
'sepal_length', 'sepal_width', 'petal_length', 'petal_width'])
print("Scaled Dataset Using MinMaxScaler")
print(df_scaled.head())
print('------------------------------------------------------')

#Standardization
data = sns.load_dataset('iris')
print('Original Dataset')
print(data.head())
std_scaler = StandardScaler()
df_scaled = std_scaler.fit_transform(df.to_numpy())
df_scaled = pd.DataFrame(df_scaled, columns=[
'sepal_length','sepal_width','petal_length','petal_width'])
print("Scaled Dataset Using StandardScaler")
print(df_scaled.head())
